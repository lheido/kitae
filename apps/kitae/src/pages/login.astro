---
import { Button } from "../components/Button";
import { Cloud1 } from "../components/deco/Cloud1";
import { Cloud2 } from "../components/deco/Cloud2";
import { DecoLeft } from "../components/DecoLeft";
import { DecoRight } from "../components/DecoRight";
import { GitlabIcon } from "../components/icons/GitlabIcon";
import Layout from "../layouts/Layout.astro";
---

<Layout title="Kitae | Login">
  <div class="absolute top-[25%] left-[50%] translate-x-[-100%] -z-[0]">
    <DecoLeft client:only="react" />
  </div>
  <div class="absolute top-[42%] right-[50%] translate-x-[100%] -z-[0]">
    <DecoRight client:only="react" />
  </div>
  <main class="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2">
    <div
      class="relative p-1 bg-gradient-to-r from-primary-500 to-secondary-500 rounded-2xl w-[339px] h-[399px] flex"
    >
      <div
        class="flex flex-col justify-center items-center gap-11 bg-dp-1 rounded-2xl flex-1 overflow-hidden relative"
      >
        <div aria-hidden="true">
          <Cloud1 className="w-[200px] h-auto absolute bottom-5 -left-8" />
          <Cloud2 className="w-[110px] h-auto absolute top-1/4 -right-4" />
        </div>
        <div class="flex flex-col items-center gap-2">
          <h1 class="text-4xl font-extralight">Log in to Kitae</h1>
          <p>いらっしゃいませ</p>
        </div>
        <ul class="flex flex-col gap-3">
          <li>
            <Button.kitae id="gitlab-login-btn">
              <GitlabIcon />
              <span>Continue with Gitlab</span>
            </Button.kitae>
          </li>
        </ul>
      </div>
    </div>
  </main>
</Layout>

<script>
  import { supabase } from "../features/supabase";
  const gitlabLoginBtn = document.querySelector("#gitlab-login-btn");
  if (gitlabLoginBtn) {
    gitlabLoginBtn.addEventListener("click", async () => {
      try {
        const { error } = await supabase.auth.signIn(
          {
            provider: "gitlab",
          },
          {
            redirectTo: `${window.location.origin}/api/auth-redirect`,
            scopes: "api",
          }
        );
        if (error) throw error;
      } catch (error) {
        console.error(error);
      }
    });
  }
</script>
