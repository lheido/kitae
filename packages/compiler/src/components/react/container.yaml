label: Container
drivers:
  - react
template: |
  interface ContainerProps {
    children: JSX.Element|JSX.Element[],
    className?: string,
    style?: any,
  }

  const Container = (props: ContainerProps) => {
    return (
      <<% = it.semantic %> className={className} style={style}>
        {props.children}
      </<% = it.semantic %>>
    )
  }

  <% if (it.prod) { %>
  export default Container;
  <% } else { %>
  const _Container = (props: ContainerProps) => {
    return (
      <div style={{display: 'contents'}} onClick={() => console.log('click')}>
        <Container>
          {props.children}
        </Container>
      </div>
    )
  }
  export default _Container;
  <% } %>
data:
  semantic:
    default: "div"
    options:
      - value: "div"
      - value: "section"
      - value: "aside"
      - value: "main"
      - value: "header"
      - value: "footer"
      - value: "nav"
